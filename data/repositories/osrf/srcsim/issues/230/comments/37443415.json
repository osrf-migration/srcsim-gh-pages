{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/230/comments/37443415.json"}, "html": {"href": "#!/osrf/srcsim/issues/230#comment-37443415"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/230.json"}}, "type": "issue", "id": 230, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "Traffic shaping seems to break ros connection between FC and SIM"}, "content": {"raw": "Wait, this gets stranger.  It appears as though that script is shaping the whole connection, not just the .150 endpoint.\n\nFor example:\n\n```\n#!bash\n\nroot@ip-172-31-19-11:~# ./src_tc.rb -i tap0 -d 100mbit -u 100mbit -f 192.168.2.150/26 -l 20ms\nRTNETLINK answers: File exists\nroot@ip-172-31-19-11:~# docker exec -it team_container bash\nroot@46d72a7c59e0:/home/docker/ws# ping 192.168.2.1                                                     \nPING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.\n64 bytes from 192.168.2.1: icmp_seq=1 ttl=64 time=40.9 ms\n64 bytes from 192.168.2.1: icmp_seq=2 ttl=64 time=40.9 ms\n64 bytes from 192.168.2.1: icmp_seq=3 ttl=64 time=40.9 ms\n64 bytes from 192.168.2.1: icmp_seq=4 ttl=64 time=41.0 ms\n\n```\n\nThe 40ms ping time is clearly showing that the filter is being used for the 2.1 target.  The bandwidth limits also apply, as I learned the hard way.", "markup": "markdown", "html": "<p>Wait, this gets stranger.  It appears as though that script is shaping the whole connection, not just the .150 endpoint.</p>\n<p>For example:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>root@ip-172-31-19-11:~# ./src_tc.rb -i tap0 -d 100mbit -u 100mbit -f <span class=\"m\">192</span>.168.2.150/26 -l 20ms\nRTNETLINK answers: File exists\nroot@ip-172-31-19-11:~# docker <span class=\"nb\">exec</span> -it team_container bash\nroot@46d72a7c59e0:/home/docker/ws# ping <span class=\"m\">192</span>.168.2.1                                                     \nPING <span class=\"m\">192</span>.168.2.1 <span class=\"o\">(</span><span class=\"m\">192</span>.168.2.1<span class=\"o\">)</span> <span class=\"m\">56</span><span class=\"o\">(</span><span class=\"m\">84</span><span class=\"o\">)</span> bytes of data.\n<span class=\"m\">64</span> bytes from <span class=\"m\">192</span>.168.2.1: <span class=\"nv\">icmp_seq</span><span class=\"o\">=</span><span class=\"m\">1</span> <span class=\"nv\">ttl</span><span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"nv\">time</span><span class=\"o\">=</span><span class=\"m\">40</span>.9 ms\n<span class=\"m\">64</span> bytes from <span class=\"m\">192</span>.168.2.1: <span class=\"nv\">icmp_seq</span><span class=\"o\">=</span><span class=\"m\">2</span> <span class=\"nv\">ttl</span><span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"nv\">time</span><span class=\"o\">=</span><span class=\"m\">40</span>.9 ms\n<span class=\"m\">64</span> bytes from <span class=\"m\">192</span>.168.2.1: <span class=\"nv\">icmp_seq</span><span class=\"o\">=</span><span class=\"m\">3</span> <span class=\"nv\">ttl</span><span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"nv\">time</span><span class=\"o\">=</span><span class=\"m\">40</span>.9 ms\n<span class=\"m\">64</span> bytes from <span class=\"m\">192</span>.168.2.1: <span class=\"nv\">icmp_seq</span><span class=\"o\">=</span><span class=\"m\">4</span> <span class=\"nv\">ttl</span><span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"nv\">time</span><span class=\"o\">=</span><span class=\"m\">41</span>.0 ms\n</pre></div>\n\n\n<p>The 40ms ping time is clearly showing that the filter is being used for the 2.1 target.  The bandwidth limits also apply, as I learned the hard way.</p>", "type": "rendered"}, "created_on": "2017-06-07T21:50:41.949433+00:00", "user": {"display_name": "Jeremy White", "uuid": "{abab48b0-35b1-4102-8373-e88a492c5294}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Babab48b0-35b1-4102-8373-e88a492c5294%7D"}, "html": {"href": "https://bitbucket.org/%7Babab48b0-35b1-4102-8373-e88a492c5294%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2764d3b5adf560de71f57e48a30550bad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJW-3.png"}}, "nickname": "knitfoo", "type": "user", "account_id": "557058:5de786d6-615c-44ef-8e12-f079efa38357"}, "updated_on": null, "type": "issue_comment", "id": 37443415}