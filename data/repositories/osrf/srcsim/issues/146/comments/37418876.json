{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/146/comments/37418876.json"}, "html": {"href": "#!/osrf/srcsim/issues/146#comment-37418876"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/146.json"}}, "type": "issue", "id": 146, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "traffic control parameters"}, "content": {"raw": "just catching up on the discussion, here's the [pull request](https://bitbucket.org/osrf/cloudsim-sim/pull-requests/61/add-latency-to-traffic-shapper/diff) containing a TC script that'll be run on the FC. Note that there have been some updates to the script today, so try testing [this version](https://bitbucket.org/osrf/cloudsim-sim/src/e0d8aaeb459210a6db56a69a870ba1bc65fc2377/src_commands/src_tc.rb?fileviewer=file-view-default). \n\nI just tested it on cloudsim FC computer with the same command you guys are already using:\n\n~~~\nsudo ./src_tc.rb -i tap0 -u 2mbit -d 380kbit -f 192.168.2.150/26 -l 250ms\n~~~\n\nThe 250ms latency is applied to inbound and outbound traffic, resulting in a ping time of 500ms. If you set a large value (like 10 or 20 seconds), you'll get a connection timed out with iperf, and ping will drop packets for the amount of time you set but should work after the initial delay period.\n\nthe uplink here is the outbound traffic: FC -> OCU, and downlink is inbound: OCU -> FC\n\nNote I find that sometimes if I've been experimenting with various rules using TC, some are left behind and were not cleaned up with just the command: `tc qdisc del dev tap0 root`", "markup": "markdown", "html": "<p>just catching up on the discussion, here's the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/cloudsim-sim/pull-requests/61/add-latency-to-traffic-shapper/diff\" rel=\"nofollow\">pull request</a> containing a TC script that'll be run on the FC. Note that there have been some updates to the script today, so try testing <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/cloudsim-sim/src/e0d8aaeb459210a6db56a69a870ba1bc65fc2377/src_commands/src_tc.rb?fileviewer=file-view-default\" rel=\"nofollow\">this version</a>. </p>\n<p>I just tested it on cloudsim FC computer with the same command you guys are already using:</p>\n<div class=\"codehilite\"><pre><span></span>sudo ./src_tc.rb -i tap0 -u 2mbit -d 380kbit -f 192.168.2.150/26 -l 250ms\n</pre></div>\n\n\n<p>The 250ms latency is applied to inbound and outbound traffic, resulting in a ping time of 500ms. If you set a large value (like 10 or 20 seconds), you'll get a connection timed out with iperf, and ping will drop packets for the amount of time you set but should work after the initial delay period.</p>\n<p>the uplink here is the outbound traffic: FC -&gt; OCU, and downlink is inbound: OCU -&gt; FC</p>\n<p>Note I find that sometimes if I've been experimenting with various rules using TC, some are left behind and were not cleaned up with just the command: <code>tc qdisc del dev tap0 root</code></p>", "type": "rendered"}, "created_on": "2017-06-07T03:07:10.721897+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 37418876}