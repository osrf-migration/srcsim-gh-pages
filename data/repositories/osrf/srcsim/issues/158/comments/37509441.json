{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/158/comments/37509441.json"}, "html": {"href": "#!/osrf/srcsim/issues/158#comment-37509441"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/158.json"}}, "type": "issue", "id": 158, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "cloudsim help"}, "content": {"raw": "I've been stumped on getting communications up between the OCU and FC.  @scpeters' docker example works fine, so I wonder what the simplest change could be to demonstrate additional communication.  I've tried simply replacing the SimpleHTTPServer with a Python echo server, but when I try to connect to 192.168.2.10:8000 with the Python client on the OCU side, I get [Errno 111] Connection refused.  Here's a similar way I've tried, adding the echo server in addition to the web server (the web server works while I get no response from the echo server):\n\nAdded to Dockerfile:\n```\n#!Docker\n\nEXPOSE 5005\nADD echoclient.py echoclient.py\n```\nChange startup.bash:\n\n```\n#!bash\n\n#!/bin/bash\npython -m echoclient.py &\npython -m SimpleHTTPServer 8000 &\nroscore -p 8001\n```\nI've verified that the echo server works on a local network (using port 5005).  I can ping everything, I can see the the docker container running, I can see 192.168.2.10:8000 in a browser, I just can't pass a message back and forth between OCU and FC...", "markup": "markdown", "html": "<p>I've been stumped on getting communications up between the OCU and FC.  @scpeters' docker example works fine, so I wonder what the simplest change could be to demonstrate additional communication.  I've tried simply replacing the SimpleHTTPServer with a Python echo server, but when I try to connect to 192.168.2.10:8000 with the Python client on the OCU side, I get [Errno 111] Connection refused.  Here's a similar way I've tried, adding the echo server in addition to the web server (the web server works while I get no response from the echo server):</p>\n<p>Added to Dockerfile:</p>\n<div class=\"codehilite language-docker\"><pre><span></span><span class=\"k\">EXPOSE</span><span class=\"s\"> 5005</span>\n<span class=\"k\">ADD</span><span class=\"s\"> echoclient.py echoclient.py</span>\n</pre></div>\n\n\n<p>Change startup.bash:</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\npython -m echoclient.py <span class=\"p\">&amp;</span>\npython -m SimpleHTTPServer <span class=\"m\">8000</span> <span class=\"p\">&amp;</span>\nroscore -p <span class=\"m\">8001</span>\n</pre></div>\n\n\n<p>I've verified that the echo server works on a local network (using port 5005).  I can ping everything, I can see the the docker container running, I can see 192.168.2.10:8000 in a browser, I just can't pass a message back and forth between OCU and FC...</p>", "type": "rendered"}, "created_on": "2017-06-11T14:28:17.149626+00:00", "user": {"display_name": "Jedediyah Williams", "uuid": "{0ed73727-8e01-409a-a6fd-1554e16cd944}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ed73727-8e01-409a-a6fd-1554e16cd944%7D"}, "html": {"href": "https://bitbucket.org/%7B0ed73727-8e01-409a-a6fd-1554e16cd944%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1ce466e941d68c9b4cf1d88c67ce9d00d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJW-2.png"}}, "nickname": "Jedediyah", "type": "user", "account_id": "557058:dc7e05b7-d275-4ba5-8e1e-9f938ef11c7a"}, "updated_on": null, "type": "issue_comment", "id": 37509441}