{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/158/comments/37184949.json"}, "html": {"href": "#!/osrf/srcsim/issues/158#comment-37184949"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/158.json"}}, "type": "issue", "id": 158, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "cloudsim help"}, "content": {"raw": "@dan77062, how are you testing the connection to the FC docker container? The connection between FC and OCU should just go through the VPN tunnel and you shouldn't need to expose the ports. e.g.\n\n1. download vpn keys from UI, extract it and start it on OCU: ` sudo openvpn --config openvpn.conf`\n\n1. start FC container through the UI or run `fc_run_team_docker.bash` on FC\n\n1. attach to FC docker container: `docker exec -it team_container bash`\n\n1. Inside FC docker container, use `nc` to test port connection, e.g. : `nc -l 8002` (if you're using @scpeters dockerfile example, 8000 is already used by http server, and 8001 by roscore)\n\n1. From OCU: `nc 192.168.2.10 8002`, type something and hit enter.\n\n1. See the texts appear in FC docker container\n\n1. you can test communication in reverse direction. i.e. `nc -l 8003` on OCU, and `nc 192.168.2.150 8003` on FC", "markup": "markdown", "html": "<p>@dan77062, how are you testing the connection to the FC docker container? The connection between FC and OCU should just go through the VPN tunnel and you shouldn't need to expose the ports. e.g.</p>\n<ol>\n<li>\n<p>download vpn keys from UI, extract it and start it on OCU: <code>sudo openvpn --config openvpn.conf</code></p>\n</li>\n<li>\n<p>start FC container through the UI or run <code>fc_run_team_docker.bash</code> on FC</p>\n</li>\n<li>\n<p>attach to FC docker container: <code>docker exec -it team_container bash</code></p>\n</li>\n<li>\n<p>Inside FC docker container, use <code>nc</code> to test port connection, e.g. : <code>nc -l 8002</code> (if you're using @scpeters dockerfile example, 8000 is already used by http server, and 8001 by roscore)</p>\n</li>\n<li>\n<p>From OCU: <code>nc 192.168.2.10 8002</code>, type something and hit enter.</p>\n</li>\n<li>\n<p>See the texts appear in FC docker container</p>\n</li>\n<li>\n<p>you can test communication in reverse direction. i.e. <code>nc -l 8003</code> on OCU, and <code>nc 192.168.2.150 8003</code> on FC</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2017-05-26T18:48:04.385409+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": null, "type": "issue_comment", "id": 37184949}