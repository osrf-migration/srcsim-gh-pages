{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/20/comments/32184765.json"}, "html": {"href": "#!/osrf/srcsim/issues/20#comment-32184765"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "disparity and focal length of cameras"}, "content": {"raw": "That is correct.\n\n\n```\n#!c++\n\n# Projection/camera matrix\n#     [fx'  0  cx' Tx]\n# P = [ 0  fy' cy' Ty]\n#     [ 0   0   1   0]\n# By convention, this matrix specifies the intrinsic (camera) matrix\n#  of the processed (rectified) image. That is, the left 3x3 portion\n#  is the normal camera intrinsic matrix for the rectified image.\n# It projects 3D points in the camera coordinate frame to 2D pixel\n#  coordinates using the focal lengths (fx', fy') and principal point\n#  (cx', cy') - these may differ from the values in K.\n# For monocular cameras, Tx = Ty = 0. Normally, monocular cameras will\n#  also have R = the identity and P[1:3,1:3] = K.\n# For a stereo pair, the fourth column [Tx Ty 0]' is related to the\n#  position of the optical center of the second camera in the first\n#  camera's frame. We assume Tz = 0 so both cameras are in the same\n#  stereo image plane. The first camera always has Tx = Ty = 0. For\n#  the right (second) camera of a horizontal stereo pair, Ty = 0 and\n#  Tx = -fx' * B, where B is the baseline between the cameras.\n```\n\nIn our case, the camera baseline `B` is:\n\n```\n#!c++\n\nB = -42.71259629068718 / -610.1799470098168 = 0.07m = 7cm\n```\n\nAnd the focal lengths `(fx', fy')` are: \n\n\n```\n#!c++\n\n(fx', fy') = (610.1799470098168, 610.1799470098168)\n```\n\nI'm going to consider this issue resolved as I believe it answers your original question but feel free to reopen it if is not the case.\n", "markup": "markdown", "html": "<p>That is correct.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\"># Projection/camera matrix</span>\n<span class=\"cp\">#     [fx&#39;  0  cx&#39; Tx]</span>\n<span class=\"cp\"># P = [ 0  fy&#39; cy&#39; Ty]</span>\n<span class=\"cp\">#     [ 0   0   1   0]</span>\n<span class=\"cp\"># By convention, this matrix specifies the intrinsic (camera) matrix</span>\n<span class=\"cp\">#  of the processed (rectified) image. That is, the left 3x3 portion</span>\n<span class=\"cp\">#  is the normal camera intrinsic matrix for the rectified image.</span>\n<span class=\"cp\"># It projects 3D points in the camera coordinate frame to 2D pixel</span>\n<span class=\"cp\">#  coordinates using the focal lengths (fx&#39;, fy&#39;) and principal point</span>\n<span class=\"cp\">#  (cx&#39;, cy&#39;) - these may differ from the values in K.</span>\n<span class=\"cp\"># For monocular cameras, Tx = Ty = 0. Normally, monocular cameras will</span>\n<span class=\"cp\">#  also have R = the identity and P[1:3,1:3] = K.</span>\n<span class=\"cp\"># For a stereo pair, the fourth column [Tx Ty 0]&#39; is related to the</span>\n<span class=\"cp\">#  position of the optical center of the second camera in the first</span>\n<span class=\"cp\">#  camera&#39;s frame. We assume Tz = 0 so both cameras are in the same</span>\n<span class=\"cp\">#  stereo image plane. The first camera always has Tx = Ty = 0. For</span>\n<span class=\"cp\">#  the right (second) camera of a horizontal stereo pair, Ty = 0 and</span>\n<span class=\"cp\">#  Tx = -fx&#39; * B, where B is the baseline between the cameras.</span>\n</pre></div>\n\n\n<p>In our case, the camera baseline <code>B</code> is:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">42.71259629068718</span> <span class=\"o\">/</span> <span class=\"o\">-</span><span class=\"mf\">610.1799470098168</span> <span class=\"o\">=</span> <span class=\"mf\">0.07</span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"n\">cm</span>\n</pre></div>\n\n\n<p>And the focal lengths <code>(fx', fy')</code> are: </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">fx</span><span class=\"err\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">fy</span><span class=\"err\">&#39;</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">610.1799470098168</span><span class=\"p\">,</span> <span class=\"mf\">610.1799470098168</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>I'm going to consider this issue resolved as I believe it answers your original question but feel free to reopen it if is not the case.</p>", "type": "rendered"}, "created_on": "2016-11-15T18:15:37.523988+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-11-15T18:20:36.765259+00:00", "type": "issue_comment", "id": 32184765}