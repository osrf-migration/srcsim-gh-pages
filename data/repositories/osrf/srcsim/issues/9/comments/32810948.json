{"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/9/comments/32810948.json"}, "html": {"href": "#!/osrf/srcsim/issues/9#comment-32810948"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/srcsim/issues/9.json"}}, "type": "issue", "id": 9, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "title": "Valkyrie Drops to the Ground due to incorrect delays in startup script"}, "content": {"raw": "I've got a system that mostly works, but occasionally it will fail, and when it fails, it will often fail many times in a row.  The last time it was failing consistently, I was able to 'fix' it by adding 3 seconds to each of the launch delays (I did it by editing /opt/nasa/indigo/share/val_deploy/scripts/delayed_roslaunch.sh).\n\nI would have preferred to solve it more correctly; have the scripts depend on some real signal, rather than just arbitrary timing.  One of the two failures I was getting had this bread crumb:\n  Exception encountered while attempting to add an actuator! Check your URDF for correct XML formatting!\nwhich I tracked to:\n  /opt/nasa/indigo/lib/libval_robot_interface.so\nbut I could not find source code for that to explore further.\n\nIn a related vein, the /opt/ros/indigo/lib/srcsim/init_robot.sh script seems to have fairly naive timing delays, although it does seem to largely produce a consistent result.  I've experimented with a launch environment that ends when the robot pose seems right, rather than time based.  I wouldn't claim it's better, but I had more fun with it <grin>.\nThe upshot of it is that you do seem to be able to vary starting positions just by having your computer 'busier' at launch time, so the drop, low level control, and release happen differently.  Maybe not a lot, but as much as a centimeter of difference at times.", "markup": "markdown", "html": "<p>I've got a system that mostly works, but occasionally it will fail, and when it fails, it will often fail many times in a row.  The last time it was failing consistently, I was able to 'fix' it by adding 3 seconds to each of the launch delays (I did it by editing /opt/nasa/indigo/share/val_deploy/scripts/delayed_roslaunch.sh).</p>\n<p>I would have preferred to solve it more correctly; have the scripts depend on some real signal, rather than just arbitrary timing.  One of the two failures I was getting had this bread crumb:\n  Exception encountered while attempting to add an actuator! Check your URDF for correct XML formatting!\nwhich I tracked to:\n  /opt/nasa/indigo/lib/libval_robot_interface.so\nbut I could not find source code for that to explore further.</p>\n<p>In a related vein, the /opt/ros/indigo/lib/srcsim/init_robot.sh script seems to have fairly naive timing delays, although it does seem to largely produce a consistent result.  I've experimented with a launch environment that ends when the robot pose seems right, rather than time based.  I wouldn't claim it's better, but I had more fun with it &lt;grin&gt;.\nThe upshot of it is that you do seem to be able to vary starting positions just by having your computer 'busier' at launch time, so the drop, low level control, and release happen differently.  Maybe not a lot, but as much as a centimeter of difference at times.</p>", "type": "rendered"}, "created_on": "2016-12-10T04:56:10.368342+00:00", "user": {"display_name": "Jeremy White", "uuid": "{abab48b0-35b1-4102-8373-e88a492c5294}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Babab48b0-35b1-4102-8373-e88a492c5294%7D"}, "html": {"href": "https://bitbucket.org/%7Babab48b0-35b1-4102-8373-e88a492c5294%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2764d3b5adf560de71f57e48a30550bad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJW-3.png"}}, "nickname": "knitfoo", "type": "user", "account_id": "557058:5de786d6-615c-44ef-8e12-f079efa38357"}, "updated_on": null, "type": "issue_comment", "id": 32810948}