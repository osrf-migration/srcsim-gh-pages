{"links": {"self": {"href": "data/repositories/osrf/srcsim/pullrequests/19/comments/28787588.json"}, "html": {"href": "#!/osrf/srcsim/pull-requests/19/_/diff#comment-28787588"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/osrf/srcsim/pullrequests/19.json"}, "html": {"href": "#!/osrf/srcsim/pull-requests/19"}}, "title": "Scoring"}, "content": {"raw": "The new one is looking good in X and Z.  I am still seeing an offset in Y however.  The offset is about .07 m and, as it turns out, that is the same as the camera baseline.\nI get the image in the left camera optical frame and transform it to the head frame.  That transform moves Y by 1/2 the camera baseline.  So if there is an issue with the head frame being inverted, it would move it by 1/2 the camera baseline in the wrong direction, which would offset the result by 2 * (1/2 camera baseline) which is exactly what I see. It comes out correct in rviz.  However, the scoring result for the neck frame agrees with the scoring result for the inverted head frame, so I don't know what is happening.\n\n\n```\n#!python\n\nAnswer 6: Color:    answer                         [1.0000 0.0000 0.0000]\n                    ground truth                   [1.0000 0.0000 0.0000]\n                    euclidean error                [0.000000]\n          Position: answer                         [2.8357 0.6229 -0.0833]\n                    ground truth (neck)            [2.9775 0.5473 -0.3765]\n                    ground truth (head)            [2.8290 -0.5473 0.0833]\n                    ground truth (head flipped)    [2.8290 0.5473 -0.0833]\n                    euclidean error (neck)         [0.334340]\n                    euclidean error (head)         [1.182004]\n                    euclidean error (head flipped) [0.075867]\n```\n\n", "markup": "markdown", "html": "<p>The new one is looking good in X and Z.  I am still seeing an offset in Y however.  The offset is about .07 m and, as it turns out, that is the same as the camera baseline.\nI get the image in the left camera optical frame and transform it to the head frame.  That transform moves Y by 1/2 the camera baseline.  So if there is an issue with the head frame being inverted, it would move it by 1/2 the camera baseline in the wrong direction, which would offset the result by 2 * (1/2 camera baseline) which is exactly what I see. It comes out correct in rviz.  However, the scoring result for the neck frame agrees with the scoring result for the inverted head frame, so I don't know what is happening.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Answer</span> <span class=\"mi\">6</span><span class=\"p\">:</span> <span class=\"n\">Color</span><span class=\"p\">:</span>    <span class=\"n\">answer</span>                         <span class=\"p\">[</span><span class=\"mf\">1.0000</span> <span class=\"mf\">0.0000</span> <span class=\"mf\">0.0000</span><span class=\"p\">]</span>\n                    <span class=\"n\">ground</span> <span class=\"n\">truth</span>                   <span class=\"p\">[</span><span class=\"mf\">1.0000</span> <span class=\"mf\">0.0000</span> <span class=\"mf\">0.0000</span><span class=\"p\">]</span>\n                    <span class=\"n\">euclidean</span> <span class=\"n\">error</span>                <span class=\"p\">[</span><span class=\"mf\">0.000000</span><span class=\"p\">]</span>\n          <span class=\"n\">Position</span><span class=\"p\">:</span> <span class=\"n\">answer</span>                         <span class=\"p\">[</span><span class=\"mf\">2.8357</span> <span class=\"mf\">0.6229</span> <span class=\"o\">-</span><span class=\"mf\">0.0833</span><span class=\"p\">]</span>\n                    <span class=\"n\">ground</span> <span class=\"n\">truth</span> <span class=\"p\">(</span><span class=\"n\">neck</span><span class=\"p\">)</span>            <span class=\"p\">[</span><span class=\"mf\">2.9775</span> <span class=\"mf\">0.5473</span> <span class=\"o\">-</span><span class=\"mf\">0.3765</span><span class=\"p\">]</span>\n                    <span class=\"n\">ground</span> <span class=\"n\">truth</span> <span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">)</span>            <span class=\"p\">[</span><span class=\"mf\">2.8290</span> <span class=\"o\">-</span><span class=\"mf\">0.5473</span> <span class=\"mf\">0.0833</span><span class=\"p\">]</span>\n                    <span class=\"n\">ground</span> <span class=\"n\">truth</span> <span class=\"p\">(</span><span class=\"n\">head</span> <span class=\"n\">flipped</span><span class=\"p\">)</span>    <span class=\"p\">[</span><span class=\"mf\">2.8290</span> <span class=\"mf\">0.5473</span> <span class=\"o\">-</span><span class=\"mf\">0.0833</span><span class=\"p\">]</span>\n                    <span class=\"n\">euclidean</span> <span class=\"n\">error</span> <span class=\"p\">(</span><span class=\"n\">neck</span><span class=\"p\">)</span>         <span class=\"p\">[</span><span class=\"mf\">0.334340</span><span class=\"p\">]</span>\n                    <span class=\"n\">euclidean</span> <span class=\"n\">error</span> <span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">)</span>         <span class=\"p\">[</span><span class=\"mf\">1.182004</span><span class=\"p\">]</span>\n                    <span class=\"n\">euclidean</span> <span class=\"n\">error</span> <span class=\"p\">(</span><span class=\"n\">head</span> <span class=\"n\">flipped</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"mf\">0.075867</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-12-22T19:10:39.167566+00:00", "user": {"display_name": "dan", "uuid": "{a93bd0ec-35fc-49a5-aa8a-b0b57403c2d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba93bd0ec-35fc-49a5-aa8a-b0b57403c2d0%7D"}, "html": {"href": "https://bitbucket.org/%7Ba93bd0ec-35fc-49a5-aa8a-b0b57403c2d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dd56d3105d7602d83d5c35a320f6b36cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsD-6.png"}}, "nickname": "dan77062", "type": "user", "account_id": "557058:e0e36946-cb60-4776-8f47-2e9a0285ad35"}, "updated_on": "2016-12-22T19:11:10.561346+00:00", "type": "pullrequest_comment", "id": 28787588}