{"rendered": {"description": {"raw": "This adds a check for two environment variables:\r\n\r\n* `USE_CUSTOM_WORLD`: 1 to use a custom world, 0 to use the world installed with the package\r\n* `CUSTOM_WORLD_PATH`: Full path to a custom world, including filename, for example `~/worlds/new.world`\r\n\r\n## Usage\r\n\r\nBy default, the variables are not set and users will use the installed world.\r\n\r\nIn case users want to use a custom world:\r\n\r\n1. Generate custom world using erb and save it to a specific path, for example:\r\n\r\n        erb unique.world.erb > ~/worlds/new.world\r\n\r\n1. Set environment variables:\r\n\r\n        export USE_CUSTOM_WORLD=1\r\n        export CUSTOM_WORLD_PATH=~/worlds/new.world\r\n\r\n1. roslaunch as usual\r\n\r\n## The need for 2 variables\r\n\r\n@dirk-thomas, I ended up using two separate variables for this because it looks like roslaunch's `if` requires a bool. So when I did \r\n\r\n`if=\"$(optenv CUSTOM_WORLD_PATH 0)\"`\r\n\r\nAnd the variable was set, I'd get an error:\r\n\r\n`~/worlds/new.world is not a 'bool' type`\r\n\r\nPlease let me know if you can think of a solution using only one env variable. Otherwise I think this is not a very big compromise.\r\n\r\n## Tutorial\r\n\r\nAdded instructions to the tutorial:\r\n\r\n#!/osrf/srcsim/wiki/finals", "markup": "markdown", "html": "<p>This adds a check for two environment variables:</p>\n<ul>\n<li><code>USE_CUSTOM_WORLD</code>: 1 to use a custom world, 0 to use the world installed with the package</li>\n<li><code>CUSTOM_WORLD_PATH</code>: Full path to a custom world, including filename, for example <code>~/worlds/new.world</code></li>\n</ul>\n<h2 id=\"markdown-header-usage\">Usage</h2>\n<p>By default, the variables are not set and users will use the installed world.</p>\n<p>In case users want to use a custom world:</p>\n<ol>\n<li>\n<p>Generate custom world using erb and save it to a specific path, for example:</p>\n<div class=\"codehilite\"><pre><span></span>erb unique.world.erb &gt; ~/worlds/new.world\n</pre></div>\n\n\n</li>\n<li>\n<p>Set environment variables:</p>\n<div class=\"codehilite\"><pre><span></span>export USE_CUSTOM_WORLD=1\nexport CUSTOM_WORLD_PATH=~/worlds/new.world\n</pre></div>\n\n\n</li>\n<li>\n<p>roslaunch as usual</p>\n</li>\n</ol>\n<h2 id=\"markdown-header-the-need-for-2-variables\">The need for 2 variables</h2>\n<p>@dirk-thomas, I ended up using two separate variables for this because it looks like roslaunch's <code>if</code> requires a bool. So when I did </p>\n<p><code>if=\"$(optenv CUSTOM_WORLD_PATH 0)\"</code></p>\n<p>And the variable was set, I'd get an error:</p>\n<p><code>~/worlds/new.world is not a 'bool' type</code></p>\n<p>Please let me know if you can think of a solution using only one env variable. Otherwise I think this is not a very big compromise.</p>\n<h2 id=\"markdown-header-tutorial\">Tutorial</h2>\n<p>Added instructions to the tutorial:</p>\n<p><a href=\"#!/osrf/srcsim/wiki/finals\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/srcsim/wiki/finals</a></p>", "type": "rendered"}, "title": {"raw": "Allow using custom world paths by checking environment variables", "markup": "markdown", "html": "<p>Allow using custom world paths by checking environment variables</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This adds a check for two environment variables:\r\n\r\n* `USE_CUSTOM_WORLD`: 1 to use a custom world, 0 to use the world installed with the package\r\n* `CUSTOM_WORLD_PATH`: Full path to a custom world, including filename, for example `~/worlds/new.world`\r\n\r\n## Usage\r\n\r\nBy default, the variables are not set and users will use the installed world.\r\n\r\nIn case users want to use a custom world:\r\n\r\n1. Generate custom world using erb and save it to a specific path, for example:\r\n\r\n        erb unique.world.erb > ~/worlds/new.world\r\n\r\n1. Set environment variables:\r\n\r\n        export USE_CUSTOM_WORLD=1\r\n        export CUSTOM_WORLD_PATH=~/worlds/new.world\r\n\r\n1. roslaunch as usual\r\n\r\n## The need for 2 variables\r\n\r\n@dirk-thomas, I ended up using two separate variables for this because it looks like roslaunch's `if` requires a bool. So when I did \r\n\r\n`if=\"$(optenv CUSTOM_WORLD_PATH 0)\"`\r\n\r\nAnd the variable was set, I'd get an error:\r\n\r\n`~/worlds/new.world is not a 'bool' type`\r\n\r\nPlease let me know if you can think of a solution using only one env variable. Otherwise I think this is not a very big compromise.\r\n\r\n## Tutorial\r\n\r\nAdded instructions to the tutorial:\r\n\r\n#!/osrf/srcsim/wiki/finals", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/diffstat/osrf/srcsim:c756677e306c%0D6a0156f0ed05?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/osrf/srcsim/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/osrf/srcsim/pullrequests/33.json"}, "comments": {"href": "data/repositories/osrf/srcsim/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/33/merge"}, "html": {"href": "#!/osrf/srcsim/pull-requests/33"}, "activity": {"href": "data/repositories/osrf/srcsim/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/diff/osrf/srcsim:c756677e306c%0D6a0156f0ed05?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/osrf/srcsim/pullrequests/33/statuses_page=1.json"}}, "title": "Allow using custom world paths by checking environment variables", "close_source_branch": true, "reviewers": [], "id": 33, "destination": {"commit": {"hash": "6a0156f0ed05", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/6a0156f0ed05.json"}, "html": {"href": "#!/osrf/srcsim/commits/6a0156f0ed05"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "branch": {"name": "default"}}, "created_on": "2017-02-17T22:51:52.737597+00:00", "summary": {"raw": "This adds a check for two environment variables:\r\n\r\n* `USE_CUSTOM_WORLD`: 1 to use a custom world, 0 to use the world installed with the package\r\n* `CUSTOM_WORLD_PATH`: Full path to a custom world, including filename, for example `~/worlds/new.world`\r\n\r\n## Usage\r\n\r\nBy default, the variables are not set and users will use the installed world.\r\n\r\nIn case users want to use a custom world:\r\n\r\n1. Generate custom world using erb and save it to a specific path, for example:\r\n\r\n        erb unique.world.erb > ~/worlds/new.world\r\n\r\n1. Set environment variables:\r\n\r\n        export USE_CUSTOM_WORLD=1\r\n        export CUSTOM_WORLD_PATH=~/worlds/new.world\r\n\r\n1. roslaunch as usual\r\n\r\n## The need for 2 variables\r\n\r\n@dirk-thomas, I ended up using two separate variables for this because it looks like roslaunch's `if` requires a bool. So when I did \r\n\r\n`if=\"$(optenv CUSTOM_WORLD_PATH 0)\"`\r\n\r\nAnd the variable was set, I'd get an error:\r\n\r\n`~/worlds/new.world is not a 'bool' type`\r\n\r\nPlease let me know if you can think of a solution using only one env variable. Otherwise I think this is not a very big compromise.\r\n\r\n## Tutorial\r\n\r\nAdded instructions to the tutorial:\r\n\r\n#!/osrf/srcsim/wiki/finals", "markup": "markdown", "html": "<p>This adds a check for two environment variables:</p>\n<ul>\n<li><code>USE_CUSTOM_WORLD</code>: 1 to use a custom world, 0 to use the world installed with the package</li>\n<li><code>CUSTOM_WORLD_PATH</code>: Full path to a custom world, including filename, for example <code>~/worlds/new.world</code></li>\n</ul>\n<h2 id=\"markdown-header-usage\">Usage</h2>\n<p>By default, the variables are not set and users will use the installed world.</p>\n<p>In case users want to use a custom world:</p>\n<ol>\n<li>\n<p>Generate custom world using erb and save it to a specific path, for example:</p>\n<div class=\"codehilite\"><pre><span></span>erb unique.world.erb &gt; ~/worlds/new.world\n</pre></div>\n\n\n</li>\n<li>\n<p>Set environment variables:</p>\n<div class=\"codehilite\"><pre><span></span>export USE_CUSTOM_WORLD=1\nexport CUSTOM_WORLD_PATH=~/worlds/new.world\n</pre></div>\n\n\n</li>\n<li>\n<p>roslaunch as usual</p>\n</li>\n</ol>\n<h2 id=\"markdown-header-the-need-for-2-variables\">The need for 2 variables</h2>\n<p>@dirk-thomas, I ended up using two separate variables for this because it looks like roslaunch's <code>if</code> requires a bool. So when I did </p>\n<p><code>if=\"$(optenv CUSTOM_WORLD_PATH 0)\"</code></p>\n<p>And the variable was set, I'd get an error:</p>\n<p><code>~/worlds/new.world is not a 'bool' type</code></p>\n<p>Please let me know if you can think of a solution using only one env variable. Otherwise I think this is not a very big compromise.</p>\n<h2 id=\"markdown-header-tutorial\">Tutorial</h2>\n<p>Added instructions to the tutorial:</p>\n<p><a href=\"#!/osrf/srcsim/wiki/finals\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/srcsim/wiki/finals</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "a80ae2a41437", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/a80ae2a41437.json"}, "html": {"href": "#!/osrf/srcsim/commits/a80ae2a41437"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "branch": {"name": "custom_world_env_var"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-02-18T00:55:12.485213+00:00", "type": "participant", "approved": false, "user": {"display_name": "Dirk Thomas", "uuid": "{a8effe61-90f2-4949-89a8-9c6972071de7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba8effe61-90f2-4949-89a8-9c6972071de7%7D"}, "html": {"href": "https://bitbucket.org/%7Ba8effe61-90f2-4949-89a8-9c6972071de7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2f77876936467715bd75258c967bcaa4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDT-2.png"}}, "nickname": "Dirk Thomas", "type": "user", "account_id": "557058:763d049c-c4c6-4e59-85a5-2d7a8fbbdd58"}}, {"role": "PARTICIPANT", "participated_on": "2017-03-02T20:34:13.536977+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-03-08T01:23:35.403054+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}], "reason": "", "updated_on": "2017-03-08T01:30:12.009129+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "c756677e306c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/c756677e306c.json"}, "html": {"href": "#!/osrf/srcsim/commits/c756677e306c"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}