{"rendered": {"description": {"raw": "The feet can get tangled up when reharnessing, so this PR resets joint positions just before lowering. I got the neutral joint positions by echoing the joint_states when it seemed to be at equilibrium.\r\n\r\nFor a kinda weird reason, I don't reset the joints connecting the pelvis to the torso. The `pelvis` is the root of the urdf kinematic tree, but the torso is link attached to the harness. The [Joint::SetPosition](https://bitbucket.org/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Joint.hh?fileviewer=file-view-default#Joint.hh-347) function sets the child link poses down the entire kinematic chain, but this doesn't work since the torso pose is already constrained by the harness. To reset the torso joints, one would have to teleport the robot to a place with no other collisions nearby, then call `SetJointPosition` on all the joints, then attach the harness. Making this change would require a lot more code to be touched, so I think this is a good compromise. The legs will still swing down into place even if the torso joints aren't reset, but they should be untangled.\r\n\r\nIntended to address #207 and #241.", "markup": "markdown", "html": "<p>The feet can get tangled up when reharnessing, so this PR resets joint positions just before lowering. I got the neutral joint positions by echoing the joint_states when it seemed to be at equilibrium.</p>\n<p>For a kinda weird reason, I don't reset the joints connecting the pelvis to the torso. The <code>pelvis</code> is the root of the urdf kinematic tree, but the torso is link attached to the harness. The <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Joint.hh?fileviewer=file-view-default#Joint.hh-347\" rel=\"nofollow\">Joint::SetPosition</a> function sets the child link poses down the entire kinematic chain, but this doesn't work since the torso pose is already constrained by the harness. To reset the torso joints, one would have to teleport the robot to a place with no other collisions nearby, then call <code>SetJointPosition</code> on all the joints, then attach the harness. Making this change would require a lot more code to be touched, so I think this is a good compromise. The legs will still swing down into place even if the torso joints aren't reset, but they should be untangled.</p>\n<p>Intended to address <a href=\"#!/osrf/srcsim/issues/207/robot-discombobulated-after-reharness\" rel=\"nofollow\" title=\"Robot Discombobulated After Reharness\" class=\"ap-connect-link\">#207</a> and <a href=\"#!/osrf/srcsim/issues/241/valkyrie-cant-walk-after-reharnessing\" rel=\"nofollow\" title=\"Valkyrie can&#39;t walk after reharnessing following a fall\" class=\"ap-connect-link\">#241</a>.</p>", "type": "rendered"}, "title": {"raw": "Reset joint positions after harnessing (all except the torso joints)", "markup": "markdown", "html": "<p>Reset joint positions after harnessing (all except the torso joints)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The feet can get tangled up when reharnessing, so this PR resets joint positions just before lowering. I got the neutral joint positions by echoing the joint_states when it seemed to be at equilibrium.\r\n\r\nFor a kinda weird reason, I don't reset the joints connecting the pelvis to the torso. The `pelvis` is the root of the urdf kinematic tree, but the torso is link attached to the harness. The [Joint::SetPosition](https://bitbucket.org/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Joint.hh?fileviewer=file-view-default#Joint.hh-347) function sets the child link poses down the entire kinematic chain, but this doesn't work since the torso pose is already constrained by the harness. To reset the torso joints, one would have to teleport the robot to a place with no other collisions nearby, then call `SetJointPosition` on all the joints, then attach the harness. Making this change would require a lot more code to be touched, so I think this is a good compromise. The legs will still swing down into place even if the torso joints aren't reset, but they should be untangled.\r\n\r\nIntended to address #207 and #241.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/99/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/diffstat/osrf/srcsim:0fecd527988b%0D4e95f3e70fca?from_pullrequest_id=99"}, "commits": {"href": "data/repositories/osrf/srcsim/pullrequests/99/commits.json"}, "self": {"href": "data/repositories/osrf/srcsim/pullrequests/99.json"}, "comments": {"href": "data/repositories/osrf/srcsim/pullrequests/99/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/99/merge"}, "html": {"href": "#!/osrf/srcsim/pull-requests/99"}, "activity": {"href": "data/repositories/osrf/srcsim/pullrequests/99/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/diff/osrf/srcsim:0fecd527988b%0D4e95f3e70fca?from_pullrequest_id=99"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/srcsim/pullrequests/99/approve"}, "statuses": {"href": "data/repositories/osrf/srcsim/pullrequests/99/statuses_page=1.json"}}, "title": "Reset joint positions after harnessing (all except the torso joints)", "close_source_branch": true, "reviewers": [], "id": 99, "destination": {"commit": {"hash": "4e95f3e70fca", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/4e95f3e70fca.json"}, "html": {"href": "#!/osrf/srcsim/commits/4e95f3e70fca"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "branch": {"name": "default"}}, "created_on": "2017-06-09T18:57:02.346483+00:00", "summary": {"raw": "The feet can get tangled up when reharnessing, so this PR resets joint positions just before lowering. I got the neutral joint positions by echoing the joint_states when it seemed to be at equilibrium.\r\n\r\nFor a kinda weird reason, I don't reset the joints connecting the pelvis to the torso. The `pelvis` is the root of the urdf kinematic tree, but the torso is link attached to the harness. The [Joint::SetPosition](https://bitbucket.org/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Joint.hh?fileviewer=file-view-default#Joint.hh-347) function sets the child link poses down the entire kinematic chain, but this doesn't work since the torso pose is already constrained by the harness. To reset the torso joints, one would have to teleport the robot to a place with no other collisions nearby, then call `SetJointPosition` on all the joints, then attach the harness. Making this change would require a lot more code to be touched, so I think this is a good compromise. The legs will still swing down into place even if the torso joints aren't reset, but they should be untangled.\r\n\r\nIntended to address #207 and #241.", "markup": "markdown", "html": "<p>The feet can get tangled up when reharnessing, so this PR resets joint positions just before lowering. I got the neutral joint positions by echoing the joint_states when it seemed to be at equilibrium.</p>\n<p>For a kinda weird reason, I don't reset the joints connecting the pelvis to the torso. The <code>pelvis</code> is the root of the urdf kinematic tree, but the torso is link attached to the harness. The <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/42215f2019f5ae64fc8a0610ef804a0fc53b0740/gazebo/physics/Joint.hh?fileviewer=file-view-default#Joint.hh-347\" rel=\"nofollow\">Joint::SetPosition</a> function sets the child link poses down the entire kinematic chain, but this doesn't work since the torso pose is already constrained by the harness. To reset the torso joints, one would have to teleport the robot to a place with no other collisions nearby, then call <code>SetJointPosition</code> on all the joints, then attach the harness. Making this change would require a lot more code to be touched, so I think this is a good compromise. The legs will still swing down into place even if the torso joints aren't reset, but they should be untangled.</p>\n<p>Intended to address <a href=\"#!/osrf/srcsim/issues/207/robot-discombobulated-after-reharness\" rel=\"nofollow\" title=\"Robot Discombobulated After Reharness\" class=\"ap-connect-link\">#207</a> and <a href=\"#!/osrf/srcsim/issues/241/valkyrie-cant-walk-after-reharnessing\" rel=\"nofollow\" title=\"Valkyrie can&#39;t walk after reharnessing following a fall\" class=\"ap-connect-link\">#241</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "615b237fe5f1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/615b237fe5f1.json"}, "html": {"href": "#!/osrf/srcsim/commits/615b237fe5f1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/srcsim.json"}, "html": {"href": "#!/osrf/srcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c41021d9-0217-4628-999d-7f8d82f98dcb}ts=c_plus_plus"}}, "type": "repository", "name": "srcsim", "full_name": "osrf/srcsim", "uuid": "{c41021d9-0217-4628-999d-7f8d82f98dcb}"}, "branch": {"name": "harness_joint_position"}}, "comment_count": 27, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-06-13T04:47:39.997772+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steven Gray", "uuid": "{7470e809-c304-4b17-b986-685f31fa15c3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7470e809-c304-4b17-b986-685f31fa15c3%7D"}, "html": {"href": "https://bitbucket.org/%7B7470e809-c304-4b17-b986-685f31fa15c3%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/e6bee642b76507eb51c2839771722e68d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSG-0.png"}}, "nickname": "stgray", "type": "user", "account_id": "557058:e6cc7c7b-9d1b-4abe-87d5-5f0da7c863e1"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-13T04:47:20.850132+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-12T19:40:02.441088+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-10T02:16:08.580549+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rud Merriam", "uuid": "{79efa10c-b8b6-4b55-9d05-7d0057e235cb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B79efa10c-b8b6-4b55-9d05-7d0057e235cb%7D"}, "html": {"href": "https://bitbucket.org/%7B79efa10c-b8b6-4b55-9d05-7d0057e235cb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:c6ed1bc6-3112-49ac-9453-b3846fe562dc/5c7bde69-befb-417b-9aae-9db0c9a59777/128"}}, "nickname": "rmerriam", "type": "user", "account_id": "557058:c6ed1bc6-3112-49ac-9453-b3846fe562dc"}}], "reason": "", "updated_on": "2017-06-13T04:47:40.031538+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "0fecd527988b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/srcsim/commit/0fecd527988b.json"}, "html": {"href": "#!/osrf/srcsim/commits/0fecd527988b"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}